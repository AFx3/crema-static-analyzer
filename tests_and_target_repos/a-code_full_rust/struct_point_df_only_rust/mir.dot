digraph __crate__ {
subgraph cluster_Mir_0_10 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn build_boxed_point(_1: i8, _2: i8) -&gt; std::boxed::Box&lt;Point, std::alloc::Global&gt;<br align="left"/>let mut _3: Point;<br align="left"/>debug x =&gt; _1;<br align="left"/>debug y =&gt; _2;<br align="left"/>>;
    bb0__0_10 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_3 = Point { x: copy _1, y: copy _2 }<br/></td></tr><tr><td align="left">_0 = Box::&lt;Point&gt;::new(move _3)</td></tr></table>>];
    bb1__0_10 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">return</td></tr></table>>];
    bb0__0_10 -> bb1__0_10 [label="return"];
}
subgraph cluster_Mir_0_11 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn build_rectangle(_1: Point, _2: Point) -&gt; Rectangle<br align="left"/>debug top_left =&gt; _1;<br align="left"/>debug bottom_right =&gt; _2;<br align="left"/>>;
    bb0__0_11 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_0 = Rectangle { top_left: move _1, bottom_right: move _2 }<br/></td></tr><tr><td align="left">return</td></tr></table>>];
}
subgraph cluster_Mir_0_12 {
    graph [fontname="Courier, monospace"];
    node [fontname="Courier, monospace"];
    edge [fontname="Courier, monospace"];
    label=<fn main() -&gt; ()<br align="left"/>let _1: std::boxed::Box&lt;Point, std::alloc::Global&gt;;<br align="left"/>let _2: std::boxed::Box&lt;Point, std::alloc::Global&gt;;<br align="left"/>let _3: *mut Point;<br align="left"/>let mut _4: std::boxed::Box&lt;Point, std::alloc::Global&gt;;<br align="left"/>let _5: *mut Point;<br align="left"/>let mut _6: std::boxed::Box&lt;Point, std::alloc::Global&gt;;<br align="left"/>let _7: Point;<br align="left"/>let mut _8: *const Point;<br align="left"/>let _9: Point;<br align="left"/>let mut _10: *const Point;<br align="left"/>let _11: Rectangle;<br align="left"/>let _12: ();<br align="left"/>let mut _13: std::fmt::Arguments&lt;'{erased}&gt;;<br align="left"/>let _14: &amp;'{erased} [&amp;'{erased} str; 3_usize];<br align="left"/>let _15: &amp;'{erased} [core::fmt::rt::Argument&lt;'{erased}&gt;; 2_usize];<br align="left"/>let _16: [core::fmt::rt::Argument&lt;'{erased}&gt;; 2_usize];<br align="left"/>let mut _17: core::fmt::rt::Argument&lt;'{erased}&gt;;<br align="left"/>let _18: &amp;'{erased} i8;<br align="left"/>let mut _19: core::fmt::rt::Argument&lt;'{erased}&gt;;<br align="left"/>let _20: &amp;'{erased} i8;<br align="left"/>let _21: ();<br align="left"/>let mut _22: std::fmt::Arguments&lt;'{erased}&gt;;<br align="left"/>let _23: &amp;'{erased} [&amp;'{erased} str; 3_usize];<br align="left"/>let _24: &amp;'{erased} [core::fmt::rt::Argument&lt;'{erased}&gt;; 2_usize];<br align="left"/>let _25: [core::fmt::rt::Argument&lt;'{erased}&gt;; 2_usize];<br align="left"/>let mut _26: core::fmt::rt::Argument&lt;'{erased}&gt;;<br align="left"/>let _27: &amp;'{erased} i8;<br align="left"/>let mut _28: core::fmt::rt::Argument&lt;'{erased}&gt;;<br align="left"/>let _29: &amp;'{erased} i8;<br align="left"/>let mut _30: std::boxed::Box&lt;Point, std::alloc::Global&gt;;<br align="left"/>let _31: Point;<br align="left"/>let mut _32: *const Point;<br align="left"/>let _33: ();<br align="left"/>let mut _34: std::fmt::Arguments&lt;'{erased}&gt;;<br align="left"/>let _35: &amp;'{erased} [&amp;'{erased} str; 3_usize];<br align="left"/>let _36: &amp;'{erased} [core::fmt::rt::Argument&lt;'{erased}&gt;; 2_usize];<br align="left"/>let _37: [core::fmt::rt::Argument&lt;'{erased}&gt;; 2_usize];<br align="left"/>let mut _38: core::fmt::rt::Argument&lt;'{erased}&gt;;<br align="left"/>let _39: &amp;'{erased} i8;<br align="left"/>let mut _40: core::fmt::rt::Argument&lt;'{erased}&gt;;<br align="left"/>let _41: &amp;'{erased} i8;<br align="left"/>let mut _42: bool;<br align="left"/>let mut _43: bool;<br align="left"/>debug boxed1 =&gt; _1;<br align="left"/>debug boxed2 =&gt; _2;<br align="left"/>debug raw1 =&gt; _3;<br align="left"/>debug raw2 =&gt; _5;<br align="left"/>debug p1 =&gt; _7;<br align="left"/>debug p2 =&gt; _9;<br align="left"/>debug rect =&gt; _11;<br align="left"/>debug p1 =&gt; _31;<br align="left"/>>;
    bb0__0_12 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">0</td></tr><tr><td align="left" balign="left">_43 = const false<br/>_42 = const false<br/>_43 = const true<br/></td></tr><tr><td align="left">_1 = build_boxed_point(const 0_i8, const 5_i8)</td></tr></table>>];
    bb1__0_12 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">1</td></tr><tr><td align="left">_2 = build_boxed_point(const 0_i8, const 10_i8)</td></tr></table>>];
    bb2__0_12 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">2</td></tr><tr><td align="left" balign="left">_42 = const true<br/>_43 = const false<br/>_4 = move _1<br/></td></tr><tr><td align="left">_3 = Box::&lt;Point&gt;::into_raw(move _4)</td></tr></table>>];
    bb3__0_12 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">3</td></tr><tr><td align="left" balign="left">_42 = const false<br/>_6 = move _2<br/></td></tr><tr><td align="left">_5 = Box::&lt;Point&gt;::into_raw(move _6)</td></tr></table>>];
    bb4__0_12 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">4</td></tr><tr><td align="left" balign="left">_8 = copy _3 as *const Point (PtrToPtr)<br/></td></tr><tr><td align="left">_7 = std::ptr::read::&lt;Point&gt;(move _8)</td></tr></table>>];
    bb5__0_12 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">5</td></tr><tr><td align="left" balign="left">_10 = copy _5 as *const Point (PtrToPtr)<br/></td></tr><tr><td align="left">_9 = std::ptr::read::&lt;Point&gt;(move _10)</td></tr></table>>];
    bb6__0_12 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">6</td></tr><tr><td align="left">_11 = build_rectangle(move _7, move _9)</td></tr></table>>];
    bb7__0_12 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">7</td></tr><tr><td align="left" balign="left">_14 = const main::promoted[2]<br/>_18 = &amp;((_11.0: Point).0: i8)<br/></td></tr><tr><td align="left">_17 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i8&gt;(copy _18)</td></tr></table>>];
    bb8__0_12 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">8</td></tr><tr><td align="left" balign="left">_20 = &amp;((_11.0: Point).1: i8)<br/></td></tr><tr><td align="left">_19 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i8&gt;(copy _20)</td></tr></table>>];
    bb9__0_12 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">9</td></tr><tr><td align="left" balign="left">_16 = [move _17, move _19]<br/>_15 = &amp;_16<br/></td></tr><tr><td align="left">_13 = Arguments::&lt;'_&gt;::new_v1::&lt;3, 2&gt;(copy _14, copy _15)</td></tr></table>>];
    bb10__0_12 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">10</td></tr><tr><td align="left">_12 = _print(move _13)</td></tr></table>>];
    bb11__0_12 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">11</td></tr><tr><td align="left" balign="left">_23 = const main::promoted[1]<br/>_27 = &amp;((_11.1: Point).0: i8)<br/></td></tr><tr><td align="left">_26 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i8&gt;(copy _27)</td></tr></table>>];
    bb12__0_12 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">12</td></tr><tr><td align="left" balign="left">_29 = &amp;((_11.1: Point).1: i8)<br/></td></tr><tr><td align="left">_28 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i8&gt;(copy _29)</td></tr></table>>];
    bb13__0_12 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">13</td></tr><tr><td align="left" balign="left">_25 = [move _26, move _28]<br/>_24 = &amp;_25<br/></td></tr><tr><td align="left">_22 = Arguments::&lt;'_&gt;::new_v1::&lt;3, 2&gt;(copy _23, copy _24)</td></tr></table>>];
    bb14__0_12 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">14</td></tr><tr><td align="left">_21 = _print(move _22)</td></tr></table>>];
    bb15__0_12 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">15</td></tr><tr><td align="left">_30 = Box::&lt;Point&gt;::from_raw(copy _3)</td></tr></table>>];
    bb16__0_12 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">16</td></tr><tr><td align="left">drop(_30)</td></tr></table>>];
    bb17__0_12 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">17</td></tr><tr><td align="left" balign="left">_32 = copy _3 as *const Point (PtrToPtr)<br/></td></tr><tr><td align="left">_31 = std::ptr::read::&lt;Point&gt;(move _32)</td></tr></table>>];
    bb18__0_12 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">18</td></tr><tr><td align="left" balign="left">_35 = const main::promoted[0]<br/>_39 = &amp;(_31.0: i8)<br/></td></tr><tr><td align="left">_38 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i8&gt;(copy _39)</td></tr></table>>];
    bb19__0_12 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">19</td></tr><tr><td align="left" balign="left">_41 = &amp;(_31.1: i8)<br/></td></tr><tr><td align="left">_40 = core::fmt::rt::Argument::&lt;'_&gt;::new_display::&lt;i8&gt;(copy _41)</td></tr></table>>];
    bb20__0_12 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">20</td></tr><tr><td align="left" balign="left">_37 = [move _38, move _40]<br/>_36 = &amp;_37<br/></td></tr><tr><td align="left">_34 = Arguments::&lt;'_&gt;::new_v1::&lt;3, 2&gt;(copy _35, copy _36)</td></tr></table>>];
    bb21__0_12 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">21</td></tr><tr><td align="left">_33 = _print(move _34)</td></tr></table>>];
    bb22__0_12 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="gray" align="center" colspan="1">22</td></tr><tr><td align="left" balign="left">_42 = const false<br/>_43 = const false<br/></td></tr><tr><td align="left">return</td></tr></table>>];
    bb23__0_12 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">23 (cleanup)</td></tr><tr><td align="left">resume</td></tr></table>>];
    bb24__0_12 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">24 (cleanup)</td></tr><tr><td align="left">drop(_2)</td></tr></table>>];
    bb25__0_12 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">25 (cleanup)</td></tr><tr><td align="left">switchInt(copy _42)</td></tr></table>>];
    bb26__0_12 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">26 (cleanup)</td></tr><tr><td align="left">drop(_1)</td></tr></table>>];
    bb27__0_12 [shape="none", label=<<table border="0" cellborder="1" cellspacing="0"><tr><td bgcolor="lightblue" align="center" colspan="1">27 (cleanup)</td></tr><tr><td align="left">switchInt(copy _43)</td></tr></table>>];
    bb0__0_12 -> bb1__0_12 [label="return"];
    bb1__0_12 -> bb2__0_12 [label="return"];
    bb1__0_12 -> bb27__0_12 [label="unwind"];
    bb2__0_12 -> bb3__0_12 [label="return"];
    bb2__0_12 -> bb25__0_12 [label="unwind"];
    bb3__0_12 -> bb4__0_12 [label="return"];
    bb3__0_12 -> bb25__0_12 [label="unwind"];
    bb4__0_12 -> bb5__0_12 [label="return"];
    bb4__0_12 -> bb25__0_12 [label="unwind"];
    bb5__0_12 -> bb6__0_12 [label="return"];
    bb5__0_12 -> bb25__0_12 [label="unwind"];
    bb6__0_12 -> bb7__0_12 [label="return"];
    bb6__0_12 -> bb25__0_12 [label="unwind"];
    bb7__0_12 -> bb8__0_12 [label="return"];
    bb7__0_12 -> bb25__0_12 [label="unwind"];
    bb8__0_12 -> bb9__0_12 [label="return"];
    bb8__0_12 -> bb25__0_12 [label="unwind"];
    bb9__0_12 -> bb10__0_12 [label="return"];
    bb9__0_12 -> bb25__0_12 [label="unwind"];
    bb10__0_12 -> bb11__0_12 [label="return"];
    bb10__0_12 -> bb25__0_12 [label="unwind"];
    bb11__0_12 -> bb12__0_12 [label="return"];
    bb11__0_12 -> bb25__0_12 [label="unwind"];
    bb12__0_12 -> bb13__0_12 [label="return"];
    bb12__0_12 -> bb25__0_12 [label="unwind"];
    bb13__0_12 -> bb14__0_12 [label="return"];
    bb13__0_12 -> bb25__0_12 [label="unwind"];
    bb14__0_12 -> bb15__0_12 [label="return"];
    bb14__0_12 -> bb25__0_12 [label="unwind"];
    bb15__0_12 -> bb16__0_12 [label="return"];
    bb15__0_12 -> bb25__0_12 [label="unwind"];
    bb16__0_12 -> bb17__0_12 [label="return"];
    bb16__0_12 -> bb25__0_12 [label="unwind"];
    bb17__0_12 -> bb18__0_12 [label="return"];
    bb17__0_12 -> bb25__0_12 [label="unwind"];
    bb18__0_12 -> bb19__0_12 [label="return"];
    bb18__0_12 -> bb25__0_12 [label="unwind"];
    bb19__0_12 -> bb20__0_12 [label="return"];
    bb19__0_12 -> bb25__0_12 [label="unwind"];
    bb20__0_12 -> bb21__0_12 [label="return"];
    bb20__0_12 -> bb25__0_12 [label="unwind"];
    bb21__0_12 -> bb22__0_12 [label="return"];
    bb21__0_12 -> bb25__0_12 [label="unwind"];
    bb24__0_12 -> bb27__0_12 [label="return"];
    bb25__0_12 -> bb27__0_12 [label="0"];
    bb25__0_12 -> bb24__0_12 [label="otherwise"];
    bb26__0_12 -> bb23__0_12 [label="return"];
    bb27__0_12 -> bb23__0_12 [label="0"];
    bb27__0_12 -> bb26__0_12 [label="otherwise"];
}
}
